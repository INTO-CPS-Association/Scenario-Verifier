name = "PowerSystem"
scenario = {
    fmus = {
        controller = {
            # Have an input parameter input_states, denoting the number of states in the system - 10 for scenario 1 and 8 for scenario 2.
            inputs = {
                input_estimated_angle_FMU_1 = {reactivity=delayed, clocks=[tc1]}
                input_estimated_angle_FMU_2 = {reactivity=delayed, clocks=[tc1]}
                input_estimated_angle_FMU_3 = {reactivity=delayed, clocks=[tc2]}
                input_estimated_angle_FMU_4 = {reactivity=delayed, clocks=[tc2]}
                input_estimated_angle_FMU_5 = {reactivity=delayed, clocks=[tc2]}
                input_estimated_omega_FMU_1 = {reactivity=delayed, clocks=[tc1]}
                input_estimated_omega_FMU_2 = {reactivity=delayed, clocks=[tc1]}
                input_estimated_omega_FMU_3 = {reactivity=delayed, clocks=[tc2]}
                input_estimated_omega_FMU_4 = {reactivity=delayed, clocks=[tc2]}
                input_estimated_omega_FMU_5 = {reactivity=delayed, clocks=[tc2]}
            },
            outputs = {
                output_pm1 = {dependencies-init=[], dependencies=[], clocks=[]}
                output_pm2 = {dependencies-init=[], dependencies=[], clocks=[]}
                output_pm3 = {dependencies-init=[], dependencies=[], clocks=[]}
                output_pm4 = {dependencies-init=[], dependencies=[], clocks=[]}
                output_pm5 = {dependencies-init=[], dependencies=[], clocks=[]}
                # The P_e outputs are not connected
                output_p_e_1 = {dependencies-init=[], dependencies=[], clocks=[]}
                output_p_e_2 = {dependencies-init=[], dependencies=[], clocks=[]}
                output_p_e_3 = {dependencies-init=[], dependencies=[], clocks=[]}
                output_p_e_4 = {dependencies-init=[], dependencies=[], clocks=[]}
                output_p_e_5 = {dependencies-init=[], dependencies=[], clocks=[]}
            },
            input-clocks = {
                tc1 = { type-of-clock = triggered, interval = 0},
                tc2 = { type-of-clock = triggered, interval = 0}
            },
            output-clocks = {}
        }
        # Five power systems - the different parameters are denoted by a parameter p_index: which should be set to a value in the interval: 1-5 (powersystem1=1, powersystem2=2, etc.)
        # A powersystem also has a parameter: input_NSG which is the number of powersystem (4 or 5)
        powersystem1 = {
            inputs = {
                input_u_1 = {reactivity=delayed, clocks=[]}
                input_u_2 = {reactivity=delayed, clocks=[]}
                input_u_3 = {reactivity=delayed, clocks=[]}
                input_u_4 = {reactivity=delayed, clocks=[]}
                input_u_5 = {reactivity=delayed, clocks=[]}
                input_PM  = {reactivity=delayed, clocks=[]}
            },
            outputs = {
                output_P_e = {dependencies-init=[], dependencies=[], clocks=[]}
                output_dy1 = {dependencies-init=[], dependencies=[], clocks=[]}
                output_dy2 = {dependencies-init=[], dependencies=[], clocks=[]}
            },
            input-clocks = {},
            output-clocks = {}
        }
        powersystem2 = {
            inputs = {
                input_u_1 = {reactivity=delayed, clocks=[]}
                input_u_2 = {reactivity=delayed, clocks=[]}
                input_u_3 = {reactivity=delayed, clocks=[]}
                input_u_4 = {reactivity=delayed, clocks=[]}
                input_u_5 = {reactivity=delayed, clocks=[]}
                input_PM  = {reactivity=delayed, clocks=[]}
            },
            outputs = {
                output_P_e = {dependencies-init=[], dependencies=[], clocks=[]}
                output_dy1 = {dependencies-init=[], dependencies=[], clocks=[]}
                output_dy2 = {dependencies-init=[], dependencies=[], clocks=[]}
            },
            input-clocks = {},
            output-clocks = {}
        }
        powersystem3 = {
            inputs = {
                input_u_1 = {reactivity=delayed, clocks=[]}
                input_u_2 = {reactivity=delayed, clocks=[]}
                input_u_3 = {reactivity=delayed, clocks=[]}
                input_u_4 = {reactivity=delayed, clocks=[]}
                input_u_5 = {reactivity=delayed, clocks=[]}
                input_PM  = {reactivity=delayed, clocks=[]}

            },
            outputs = {
                output_P_e = {dependencies-init=[], dependencies=[], clocks=[]}
                output_dy1 = {dependencies-init=[], dependencies=[], clocks=[]}
                output_dy2 = {dependencies-init=[], dependencies=[], clocks=[]}
            },
            input-clocks = {},
            output-clocks = {}
        }
        powersystem4 = {
            inputs = {
                input_u_1 = {reactivity=delayed, clocks=[]}
                input_u_2 = {reactivity=delayed, clocks=[]}
                input_u_3 = {reactivity=delayed, clocks=[]}
                input_u_4 = {reactivity=delayed, clocks=[]}
                input_u_5 = {reactivity=delayed, clocks=[]}
                input_PM  = {reactivity=delayed, clocks=[]}

            },
            outputs = {
                output_P_e = {dependencies-init=[], dependencies=[], clocks=[]}
                output_dy1 = {dependencies-init=[], dependencies=[], clocks=[]}
                output_dy2 = {dependencies-init=[], dependencies=[], clocks=[]}
            },
            input-clocks = {},
            output-clocks = {}
        }
        powersystem5 = {
            inputs = {
                input_u_1 = {reactivity=delayed, clocks=[]}
                input_u_2 = {reactivity=delayed, clocks=[]}
                input_u_3 = {reactivity=delayed, clocks=[]}
                input_u_4 = {reactivity=delayed, clocks=[]}
                input_u_5 = {reactivity=delayed, clocks=[]}
                input_PM  = {reactivity=delayed, clocks=[]}
            },
            outputs = {
                output_P_e = {dependencies-init=[], dependencies=[], clocks=[]}
                output_dy1 = {dependencies-init=[], dependencies=[], clocks=[]}
                output_dy2 = {dependencies-init=[], dependencies=[], clocks=[]}
            },
            input-clocks = {},
            output-clocks = {}
        }
        estimator_1 = {
            inputs = {
                input_pm1 = {reactivity=delayed, clocks=[]}
                input_pm2 = {reactivity=delayed, clocks=[]}
                input_pm3 = {reactivity=delayed, clocks=[]}
                input_pm4 = {reactivity=delayed, clocks=[]}
                input_pm5 = {reactivity=delayed, clocks=[]}
                input_pe1 = {reactivity=delayed, clocks=[]}
                input_pe2 = {reactivity=delayed, clocks=[]}
                input_pe3 = {reactivity=delayed, clocks=[]}
                input_pe4 = {reactivity=delayed, clocks=[]}
                input_pe5 = {reactivity=delayed, clocks=[]}
                input_states_1 = {reactivity=delayed, clocks=[tc2]}
                input_states_2 = {reactivity=delayed, clocks=[tc2]}
                input_states_3 = {reactivity=delayed, clocks=[tc2]}
                input_states_4 = {reactivity=delayed, clocks=[tc2]}
                input_states_5 = {reactivity=delayed, clocks=[tc2]}
                input_states_6 = {reactivity=delayed, clocks=[tc2]}
            },
            outputs = {
                output_states_1 = {dependencies-init=[], dependencies=[], clocks=[tc1]}
                output_states_2 = {dependencies-init=[], dependencies=[], clocks=[tc1]}
                output_states_3 = {dependencies-init=[], dependencies=[], clocks=[tc1]}
                output_states_4 = {dependencies-init=[], dependencies=[], clocks=[tc1]}
                output_k2_1 = {dependencies-init=[], dependencies=[], clocks=[tc1]}
                output_k2_2 = {dependencies-init=[], dependencies=[], clocks=[tc1]}
                output_k3_1 = {dependencies-init=[], dependencies=[], clocks=[tc1]}
                output_k3_2 = {dependencies-init=[], dependencies=[], clocks=[tc1]}
                output_k4_1 = {dependencies-init=[], dependencies=[], clocks=[tc1]}
                output_k4_2 = {dependencies-init=[], dependencies=[], clocks=[tc1]}
            },
            input-clocks = {
                c1 = { type-of-clock = timed, interval = 3}
                tc2 = { type-of-clock = triggered, interval = 0}
            },
            output-clocks = {
                tc1 = { type-of-clock = triggered, dependencies = [], dependencies-clocks = []}
            }
        }
        estimator_2 = {
            inputs = {
                input_pm1 = {reactivity=delayed, clocks=[]}
                input_pm2 = {reactivity=delayed, clocks=[]}
                input_pm3 = {reactivity=delayed, clocks=[]}
                input_pm4 = {reactivity=delayed, clocks=[]}
                input_pm5 = {reactivity=delayed, clocks=[]}
                input_pe1 = {reactivity=delayed, clocks=[]}
                input_pe2 = {reactivity=delayed, clocks=[]}
                input_pe3 = {reactivity=delayed, clocks=[]}
                input_pe4 = {reactivity=delayed, clocks=[]}
                input_pe5 = {reactivity=delayed, clocks=[]}
                input_states_1 = {reactivity=delayed, clocks=[tc1]}
                input_states_2 = {reactivity=delayed, clocks=[tc1]}
                input_states_3 = {reactivity=delayed, clocks=[tc1]}
                input_states_4 = {reactivity=delayed, clocks=[tc1]}
                input_k2_1 = {reactivity=delayed, clocks=[tc1]}
                input_k2_2 = {reactivity=delayed, clocks=[tc1]}
                input_k3_1 = {reactivity=delayed, clocks=[tc1]}
                input_k3_2 = {reactivity=delayed, clocks=[tc1]}
                input_k4_1 = {reactivity=delayed, clocks=[tc1]}
                input_k4_2 = {reactivity=delayed, clocks=[tc1]}
            },
            outputs = {
                output_states_1 = {dependencies-init=[], dependencies=[], clocks=[tc2]}
                output_states_2 = {dependencies-init=[], dependencies=[], clocks=[tc2]}
                output_states_3 = {dependencies-init=[], dependencies=[], clocks=[tc2]}
                output_states_4 = {dependencies-init=[], dependencies=[], clocks=[tc2]}
                output_states_5 = {dependencies-init=[], dependencies=[], clocks=[tc2]}
                output_states_6 = {dependencies-init=[], dependencies=[], clocks=[tc2]}
            },
            input-clocks = {
                tc1 = { type-of-clock = triggered, interval = 0}
                c2 = { type-of-clock = timed, interval = 2}
            },
            output-clocks = {
                tc2 = { type-of-clock = triggered, dependencies = [], dependencies-clocks = []}
            }
        }
    }
    connections = [
        # Controller to Powersystems
        controller.output_pm1 -> powersystem1.input_PM
        controller.output_pm2 -> powersystem2.input_PM
        controller.output_pm3 -> powersystem3.input_PM
        controller.output_pm4 -> powersystem4.input_PM
        controller.output_pm5 -> powersystem5.input_PM

        # Powersystem 1 to Other Powersystems
        powersystem1.output_dy1 -> powersystem2.input_u_1
        powersystem1.output_dy1 -> powersystem3.input_u_1
        powersystem1.output_dy1 -> powersystem4.input_u_1
        powersystem1.output_dy1 -> powersystem5.input_u_1

        # Powersystem 2 to Other Powersystems
        powersystem2.output_dy1 -> powersystem1.input_u_2
        powersystem2.output_dy1 -> powersystem3.input_u_2
        powersystem2.output_dy1 -> powersystem4.input_u_2
        powersystem2.output_dy1 -> powersystem5.input_u_2

        # Powersystem 3 to Other Powersystems
        powersystem3.output_dy1 -> powersystem1.input_u_3
        powersystem3.output_dy1 -> powersystem2.input_u_3
        powersystem3.output_dy1 -> powersystem4.input_u_3
        powersystem3.output_dy1 -> powersystem5.input_u_3

        # Powersystem 4 to Other Powersystems
        powersystem4.output_dy1 -> powersystem1.input_u_4
        powersystem4.output_dy1 -> powersystem2.input_u_4
        powersystem4.output_dy1 -> powersystem3.input_u_4
        powersystem4.output_dy1 -> powersystem5.input_u_4

        # Powersystem 5 to Other Powersystems
        powersystem5.output_dy1 -> powersystem1.input_u_5
        powersystem5.output_dy1 -> powersystem2.input_u_5
        powersystem5.output_dy1 -> powersystem3.input_u_5
        powersystem5.output_dy1 -> powersystem4.input_u_5

        # Powersystems to Estimator 1
        powersystem1.output_P_e -> estimator_1.input_pe1
        powersystem2.output_P_e -> estimator_1.input_pe2
        powersystem3.output_P_e -> estimator_1.input_pe3
        powersystem4.output_P_e -> estimator_1.input_pe4
        powersystem5.output_P_e -> estimator_1.input_pe5

        # Controller to Estimator - Mechanical Power
        controller.output_pm1 -> estimator_1.input_pm1
        controller.output_pm2 -> estimator_1.input_pm2
        controller.output_pm3 -> estimator_1.input_pm3
        controller.output_pm4 -> estimator_1.input_pm4
        controller.output_pm5 -> estimator_1.input_pm5

        # Powersystems to Estimator 2
        powersystem1.output_P_e -> estimator_2.input_pe1
        powersystem2.output_P_e -> estimator_2.input_pe2
        powersystem3.output_P_e -> estimator_2.input_pe3
        powersystem4.output_P_e -> estimator_2.input_pe4
        powersystem5.output_P_e -> estimator_2.input_pe5

        # Controller to Estimator - Mechanical Power
        controller.output_pm1 -> estimator_2.input_pm1
        controller.output_pm2 -> estimator_2.input_pm2
        controller.output_pm3 -> estimator_2.input_pm3
        controller.output_pm4 -> estimator_2.input_pm4
        controller.output_pm5 -> estimator_2.input_pm5

        # Estimator 1 to Estimator 2
        estimator_1.output_k2_1 -> estimator_2.input_k2_1
        estimator_1.output_k2_2 -> estimator_2.input_k2_2
        estimator_1.output_k3_1 -> estimator_2.input_k3_1
        estimator_1.output_k3_2 -> estimator_2.input_k3_2
        estimator_1.output_k4_1 -> estimator_2.input_k4_1
        estimator_1.output_k4_2 -> estimator_2.input_k4_2
        estimator_1.output_states_1 -> estimator_2.input_states_1
        estimator_1.output_states_2 -> estimator_2.input_states_2
        estimator_1.output_states_3 -> estimator_2.input_states_3
        estimator_1.output_states_4 -> estimator_2.input_states_4

        # Estimator 1 to Controller
        estimator_1.output_states_1 -> controller.input_estimated_angle_FMU_4
        estimator_1.output_states_2 -> controller.input_estimated_angle_FMU_5
        estimator_1.output_states_3 -> controller.input_estimated_omega_FMU_4
        estimator_1.output_states_4 -> controller.input_estimated_omega_FMU_5

        # Estimator 2 to Estimator 1
        estimator_2.output_states_1 -> estimator_1.input_states_1
        estimator_2.output_states_2 -> estimator_1.input_states_2
        estimator_2.output_states_3 -> estimator_1.input_states_3
        estimator_2.output_states_4 -> estimator_1.input_states_4
        estimator_2.output_states_5 -> estimator_1.input_states_5
        estimator_2.output_states_6 -> estimator_1.input_states_6

        # Estimator 2 to Controller
        estimator_2.output_states_1 -> controller.input_estimated_angle_FMU_1
        estimator_2.output_states_2 -> controller.input_estimated_angle_FMU_2
        estimator_2.output_states_3 -> controller.input_estimated_angle_FMU_3
        estimator_2.output_states_4 -> controller.input_estimated_omega_FMU_1
        estimator_2.output_states_5 -> controller.input_estimated_omega_FMU_2
        estimator_2.output_states_6 -> controller.input_estimated_omega_FMU_3
    ]
    clock-connections = [
        estimator_1.tc1 -> estimator_2.tc1
        estimator_2.tc2 -> estimator_1.tc2
        estimator_1.tc1 -> controller.tc1
        estimator_2.tc1 -> controller.tc1
    ]}

initialization = [
  {get: "estimator_1.output_k4_2"}
  {set: "estimator_2.input_k4_2"}
  {get: "estimator_1.output_k3_1"}
  {set: "estimator_2.input_k3_1"}
  {get: "estimator_1.output_k4_1"}
  {set: "estimator_2.input_k4_1"}
  {get: "controller.output_pm2"}
  {set: "estimator_1.input_pm2"}
  {set: "powersystem2.input_PM"}
  {set: "estimator_2.input_pm2"}
  {get: "estimator_2.output_states_4"}
  {set: "controller.input_estimated_omega_FMU_1"}
  {set: "estimator_1.input_states_4"}
  {get: "estimator_1.output_k2_2"}
  {set: "estimator_2.input_k2_2"}
  {get: "estimator_1.output_k3_2"}
  {set: "estimator_2.input_k3_2"}
  {get: "estimator_2.output_states_2"}
  {set: "controller.input_estimated_angle_FMU_2"}
  {set: "estimator_1.input_states_2"}
  {get: "estimator_2.output_states_6"}
  {set: "estimator_1.input_states_6"}
  {set: "controller.input_estimated_omega_FMU_3"}
  {get: "estimator_2.output_states_1"}
  {set: "controller.input_estimated_angle_FMU_1"}
  {set: "estimator_1.input_states_1"}
  {get: "estimator_1.output_states_2"}
  {set: "controller.input_estimated_angle_FMU_5"}
  {set: "estimator_2.input_states_2"}
  {get: "estimator_1.output_states_1"}
  {set: "controller.input_estimated_angle_FMU_4"}
  {set: "estimator_2.input_states_1"}
  {get: "powersystem5.output_P_e"}
  {set: "estimator_1.input_pe5"}
  {set: "estimator_2.input_pe5"}
  {get: "estimator_2.output_states_5"}
  {set: "controller.input_estimated_omega_FMU_2"}
  {set: "estimator_1.input_states_5"}
  {get: "estimator_2.output_states_3"}
  {set: "estimator_1.input_states_3"}
  {set: "controller.input_estimated_angle_FMU_3"}
  {get: "controller.output_pm1"}
  {set: "powersystem1.input_PM"}
  {set: "estimator_1.input_pm1"}
  {set: "estimator_2.input_pm1"}
  {get: "powersystem2.output_P_e"}
  {set: "estimator_2.input_pe2"}
  {set: "estimator_1.input_pe2"}
  {get: "powersystem4.output_P_e"}
  {set: "estimator_1.input_pe4"}
  {set: "estimator_2.input_pe4"}
  {get: "controller.output_pm5"}
  {set: "estimator_2.input_pm5"}
  {set: "powersystem5.input_PM"}
  {set: "estimator_1.input_pm5"}
  {get: "powersystem3.output_dy1"}
  {set: "powersystem1.input_u_3"}
  {set: "powersystem5.input_u_3"}
  {set: "powersystem2.input_u_3"}
  {set: "powersystem4.input_u_3"}
  {get: "controller.output_pm4"}
  {set: "estimator_2.input_pm4"}
  {set: "estimator_1.input_pm4"}
  {set: "powersystem4.input_PM"}
  {get: "controller.output_pm3"}
  {set: "estimator_1.input_pm3"}
  {set: "powersystem3.input_PM"}
  {set: "estimator_2.input_pm3"}
  {get: "estimator_1.output_k2_1"}
  {set: "estimator_2.input_k2_1"}
  {get: "powersystem1.output_P_e"}
  {set: "estimator_1.input_pe1"}
  {set: "estimator_2.input_pe1"}
  {get: "powersystem3.output_P_e"}
  {set: "estimator_2.input_pe3"}
  {set: "estimator_1.input_pe3"}
  {get: "powersystem5.output_dy1"}
  {set: "powersystem3.input_u_5"}
  {set: "powersystem4.input_u_5"}
  {set: "powersystem2.input_u_5"}
  {set: "powersystem1.input_u_5"}
  {get: "powersystem2.output_dy1"}
  {set: "powersystem3.input_u_2"}
  {set: "powersystem1.input_u_2"}
  {set: "powersystem4.input_u_2"}
  {set: "powersystem5.input_u_2"}
  {get: "powersystem4.output_dy1"}
  {set: "powersystem5.input_u_4"}
  {set: "powersystem1.input_u_4"}
  {set: "powersystem3.input_u_4"}
  {set: "powersystem2.input_u_4"}
  {get: "estimator_1.output_states_4"}
  {set: "estimator_2.input_states_4"}
  {set: "controller.input_estimated_omega_FMU_5"}
  {get: "powersystem1.output_dy1"}
  {set: "powersystem2.input_u_1"}
  {set: "powersystem5.input_u_1"}
  {set: "powersystem4.input_u_1"}
  {set: "powersystem3.input_u_1"}
  {get: "estimator_1.output_states_3"}
  {set: "controller.input_estimated_omega_FMU_4"}
  {set: "estimator_2.input_states_3"}
]
cosim-step =
[
    {step: powersystem3 }
    {get: "powersystem3.output_P_e"}
    {step: powersystem2 }
    {get: "powersystem2.output_P_e"}
    {get: "powersystem2.output_dy1"}
    {set: "powersystem3.input_u_2"}
    {get: "powersystem3.output_dy1"}
    {set: "powersystem2.input_u_3"}
    {step: powersystem1 }
    {get: "powersystem1.output_P_e"}
    {set: "powersystem1.input_u_2"}
    {set: "powersystem1.input_u_3"}
    {get: "powersystem1.output_dy1"}
    {set: "powersystem2.input_u_1"}
    {set: "powersystem3.input_u_1"}
    {step: powersystem4 }
    {get: "powersystem4.output_P_e"}
    {set: "powersystem4.input_u_1"}
    {get: "powersystem4.output_dy1"}
    {set: "powersystem1.input_u_4"}
    {set: "powersystem3.input_u_4"}
    {set: "powersystem2.input_u_4"}
    {set: "powersystem4.input_u_2"}
    {set: "powersystem4.input_u_3"}
    {step: controller }
    {get: "controller.output_pm4"}
    {set: "powersystem4.input_PM"}
    {get: "controller.output_pm5"}
    {get: "controller.output_pm2"}
    {set: "powersystem2.input_PM"}
    {get: "controller.output_pm3"}
    {set: "powersystem3.input_PM"}
    {get: "controller.output_pm1"}
    {set: "powersystem1.input_PM"}
    {step: estimator_1 }
    {get: "estimator_1.output_states_1"}
    {set: "controller.input_estimated_angle_FMU_4"}
    {set: "estimator_1.input_pm3"}
    {get: "estimator_1.output_k3_1"}
    {get: "estimator_1.output_k2_1"}
    {set: "estimator_1.input_pe1"}
    {set: "estimator_1.input_pm4"}
    {get: "estimator_1.output_k3_2"}
    {get: "estimator_1.output_k2_2"}
    {set: "estimator_1.input_pe2"}
    {set: "estimator_1.input_pm2"}
    {get: "estimator_1.output_k4_1"}
    {set: "estimator_1.input_pe3"}
    {set: "estimator_1.input_pe4"}
    {get: "estimator_1.output_states_4"}
    {set: "controller.input_estimated_omega_FMU_5"}
    {get: "estimator_1.output_k4_2"}
    {set: "estimator_1.input_pm1"}
    {set: "estimator_1.input_pm5"}
    {get: "estimator_1.output_states_2"}
    {set: "controller.input_estimated_angle_FMU_5"}
    {step: powersystem5 }
    {set: "powersystem5.input_u_4"}
    {get: "powersystem5.output_P_e"}
    {set: "estimator_1.input_pe5"}
    {set: "powersystem5.input_u_3"}
    {set: "powersystem5.input_PM"}
    {get: "powersystem5.output_dy1"}
    {set: "powersystem3.input_u_5"}
    {set: "powersystem4.input_u_5"}
    {set: "powersystem2.input_u_5"}
    {set: "powersystem1.input_u_5"}
    {set: "powersystem5.input_u_1"}
    {set: "powersystem5.input_u_2"}
    {step: estimator_2 }
    {set: "estimator_2.input_k2_1"}
    {set: "estimator_2.input_pm5"}
    {set: "estimator_2.input_k3_1"}
    {set: "estimator_2.input_k4_2"}
    {get: "estimator_2.output_states_4"}
    {set: "controller.input_estimated_omega_FMU_1"}
    {set: "estimator_1.input_states_4"}
    {set: "estimator_2.input_pe4"}
    {set: "estimator_2.input_states_4"}
    {set: "estimator_2.input_pm3"}
    {set: "estimator_2.input_states_2"}
    {set: "estimator_2.input_pe5"}
    {set: "estimator_2.input_k2_2"}
    {get: "estimator_2.output_states_5"}
    {set: "controller.input_estimated_omega_FMU_2"}
    {set: "estimator_1.input_states_5"}
    {set: "estimator_2.input_pm4"}
    {set: "estimator_2.input_pe2"}
    {get: "estimator_2.output_states_2"}
    {set: "controller.input_estimated_angle_FMU_2"}
    {set: "estimator_1.input_states_2"}
    {get: "estimator_2.output_states_3"}
    {set: "estimator_1.input_states_3"}
    {set: "controller.input_estimated_angle_FMU_3"}
    {set: "estimator_2.input_k3_2"}
    {set: "estimator_2.input_k4_1"}
    {set: "estimator_2.input_pe3"}
    {get: "estimator_2.output_states_1"}
    {set: "controller.input_estimated_angle_FMU_1"}
    {set: "estimator_1.input_states_1"}
    {set: "estimator_2.input_pe1"}
    {set: "estimator_2.input_states_1"}
    {set: "estimator_2.input_pm1"}
    {get: "estimator_2.output_states_6"}
    {set: "estimator_1.input_states_6"}
    {set: "controller.input_estimated_omega_FMU_3"}
    {set: "estimator_2.input_pm2"}
    {get: "estimator_1.output_states_3"}
    {set: "controller.input_estimated_omega_FMU_4"}
    {set: "estimator_2.input_states_3"}
]
event-strategies = {
}