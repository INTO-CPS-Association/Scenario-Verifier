name = "Example - Paper"
scenario = {
    fmus = {
        supervisor = {
            inputs = {
                x = {reactivity=delayed, clocks = []}
            },
            outputs = {
                a_s = {dependencies-init=[], dependencies=[], clocks = [s]}
            }
            input-clocks = {}
            output-clocks = {
                s = { type-of-clock = triggered, dependencies = [], dependencies-clocks = []}
            }
        }
        controller = {
            inputs = {
                x = {reactivity=delayed, clocks = []}
                a_s = {reactivity=delayed, clocks = [s]}
            },
            outputs = {
                u_r = {dependencies-init=[], dependencies=[], clocks = [r]}
            }
            input-clocks = {
                r = { type-of-clock = timed, interval = 2}
                s = { type-of-clock = triggered, interval = 0}
            }
            output-clocks = {}
        }
        plant = {
            inputs = {
                u = {reactivity=delayed, clocks = [r]}
            },
            outputs = {
                x = {dependencies-init=[], dependencies=[], clocks = []}
            }
            input-clocks = {
                r = { type-of-clock = timed, interval = 2}
            }
            output-clocks = {}
        }
    }
    connections = [
        supervisor.a_s -> controller.a_s
        controller.u_r -> plant.u
        plant.x -> controller.x
        plant.x -> supervisor.x
    ]
    clock-connections = [
        supervisor.s -> controller.s
    ]
}
initialization = [
  { get: plant.x}
  { set: controller.x}
  { set: supervisor.x}
]
cosim-step = [
]
event-strategies = {

}