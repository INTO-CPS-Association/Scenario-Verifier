name = "Simple master algorithm"
scenario = {
    fmus = {
        supervisor = {
            inputs = {
                x = {reactivity=delayed, clocks = []}
            },
            outputs = {
                a_s = {dependencies-init=[], dependencies=[], clocks = [s]}
            }
            input-clocks = {}
            output-clocks = {
                s = { type-of-clock = triggered, dependencies=[a_s], dependencies-clocks=[]}
            }
        }
        controller = {
            inputs = {
                x_r = {reactivity=delayed, clocks = [r]}
                a_s = {reactivity=delayed, clocks = [s]}
            },
            outputs = {
                u_r = {dependencies-init=[x_r], dependencies=[x_r], clocks = [r]}
            }
            input-clocks = {
                r = { type-of-clock = timed, interval = 2}
                s = { type-of-clock = triggered, interval = 0}
            }
            output-clocks = {}
        }
        actuation = {
            inputs = {
                u_r = {reactivity=delayed, clocks = [r]}
            },
            outputs = {
                u = {dependencies-init=[u_r], dependencies=[u_r], clocks = [r]}
            }
            input-clocks = {
                r = { type-of-clock = timed, interval = 2}
            }
            output-clocks = {}
        }
        plant = {
            inputs = {
                u = {reactivity=delayed, clocks = [r]}
            },
            outputs = {
                x = {dependencies-init=[], dependencies=[], clocks = []}
            }
            input-clocks = {
                r = { type-of-clock = timed, interval = 2}
            }
            output-clocks = {}
        }
        sensor = {
            inputs = {
                x = {reactivity=delayed, clocks = []}
            },
            outputs = {
                x_r = {dependencies-init=[], dependencies=[], clocks = [r]}
            }
            input-clocks = {
                r = { type-of-clock = timed, interval = 2}
            }
            output-clocks = {}
        }
    }
    connections = [
        supervisor.a_s -> controller.a_s
        sensor.x_r -> controller.x_r
        controller.u_r -> actuation.u_r
        actuation.u -> plant.u
        plant.x -> sensor.x
        plant.x -> supervisor.x
    ]
    clock-connections = [
        supervisor.s -> controller.s
    ]
}
initialization = [
  { get: plant.x}
  { set: sensor.x}
  { set: supervisor.x}
]
cosim-step = {
    cosim-step1 = [
        {step: supervisor }
        {step: controller }
        {get: "plant.x"}
        {step: actuation }
        {step: sensor }
        {set: "sensor.x"}
        {step: plant }
        {set: "supervisor.x"}
    ]
}
event-strategies = {

}