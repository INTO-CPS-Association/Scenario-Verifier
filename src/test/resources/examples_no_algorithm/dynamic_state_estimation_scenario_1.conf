name = "Scenario_1"
scenario = {
    fmus = {
        controller = {
            # Have an input parameter input_states, denoting the number of states in the system - 10 for scenario 1 and 8 for scenario 2.
            inputs = {
                input_estimated_angle_FMU_1 = {reactivity=delayed}
                input_estimated_angle_FMU_2 = {reactivity=delayed}
                input_estimated_angle_FMU_3 = {reactivity=delayed}
                input_estimated_angle_FMU_4 = {reactivity=delayed}
                input_estimated_angle_FMU_5 = {reactivity=delayed}
                input_estimated_omega_FMU_1 = {reactivity=delayed}
                input_estimated_omega_FMU_2 = {reactivity=delayed}
                input_estimated_omega_FMU_3 = {reactivity=delayed}
                input_estimated_omega_FMU_4 = {reactivity=delayed}
                input_estimated_omega_FMU_5 = {reactivity=delayed}
            },
            outputs = {
                output_pm1 = {dependencies-init=[], dependencies=[]}
                output_pm2 = {dependencies-init=[], dependencies=[]}
                output_pm3 = {dependencies-init=[], dependencies=[]}
                output_pm4 = {dependencies-init=[], dependencies=[]}
                output_pm5 = {dependencies-init=[], dependencies=[]}
                # The P_e outputs are not connected
                output_p_e_1 = {dependencies-init=[], dependencies=[]}
                output_p_e_2 = {dependencies-init=[], dependencies=[]}
                output_p_e_3 = {dependencies-init=[], dependencies=[]}
                output_p_e_4 = {dependencies-init=[], dependencies=[]}
                output_p_e_5 = {dependencies-init=[], dependencies=[]}
            }
        }
        # Five power systems - the different parameters are denoted by a parameter p_index: which should be set to a value in the interval: 1-5 (powersystem1=1, powersystem2=2, etc.)
        # A powersystem also has a parameter: input_NSG which is the number of powersystem (4 or 5)
        powersystem1 = {
            inputs = {
                input_u_1 = {reactivity=delayed}
                input_u_2 = {reactivity=delayed}
                input_u_3 = {reactivity=delayed}
                input_u_4 = {reactivity=delayed}
                input_u_5 = {reactivity=delayed}
                input_PM  = {reactivity=delayed}
            },
            outputs = {
                output_P_e = {dependencies-init=[], dependencies=[]}
                output_dy1 = {dependencies-init=[], dependencies=[]}
                output_dy2 = {dependencies-init=[], dependencies=[]}
            }
        }
        powersystem2 = {
            inputs = {
                input_u_1 = {reactivity=delayed}
                input_u_2 = {reactivity=delayed}
                input_u_3 = {reactivity=delayed}
                input_u_4 = {reactivity=delayed}
                input_u_5 = {reactivity=delayed}
                input_PM  = {reactivity=delayed}
            },
            outputs = {
                output_P_e = {dependencies-init=[], dependencies=[]}
                output_dy1 = {dependencies-init=[], dependencies=[]}
                output_dy2 = {dependencies-init=[], dependencies=[]}
            }
        }
        powersystem3 = {
            inputs = {
                input_u_1 = {reactivity=delayed}
                input_u_2 = {reactivity=delayed}
                input_u_3 = {reactivity=delayed}
                input_u_4 = {reactivity=delayed}
                input_u_5 = {reactivity=delayed}
                input_PM  = {reactivity=delayed}

            },
            outputs = {
                output_P_e = {dependencies-init=[], dependencies=[]}
                output_dy1 = {dependencies-init=[], dependencies=[]}
                output_dy2 = {dependencies-init=[], dependencies=[]}
            }
        }
        powersystem4 = {
            inputs = {
                input_u_1 = {reactivity=delayed}
                input_u_2 = {reactivity=delayed}
                input_u_3 = {reactivity=delayed}
                input_u_4 = {reactivity=delayed}
                input_u_5 = {reactivity=delayed}
                input_PM  = {reactivity=delayed}

            },
            outputs = {
                output_P_e = {dependencies-init=[], dependencies=[]}
                output_dy1 = {dependencies-init=[], dependencies=[]}
                output_dy2 = {dependencies-init=[], dependencies=[]}
            }
        }
        powersystem5 = {
            inputs = {
                input_u_1 = {reactivity=delayed}
                input_u_2 = {reactivity=delayed}
                input_u_3 = {reactivity=delayed}
                input_u_4 = {reactivity=delayed}
                input_u_5 = {reactivity=delayed}
                input_PM  = {reactivity=delayed}
            },
            outputs = {
                output_P_e = {dependencies-init=[], dependencies=[]}
                output_dy1 = {dependencies-init=[], dependencies=[]}
                output_dy2 = {dependencies-init=[], dependencies=[]}
            }
        }
        estimator_1 = {
            inputs = {
                input_pm1 = {reactivity=delayed}
                input_pm2 = {reactivity=delayed}
                input_pm3 = {reactivity=delayed}
                input_pm4 = {reactivity=delayed}
                input_pm5 = {reactivity=delayed}
                input_pe1 = {reactivity=delayed}
                input_pe2 = {reactivity=delayed}
                input_pe3 = {reactivity=delayed}
                input_pe4 = {reactivity=delayed}
                input_pe5 = {reactivity=delayed}
                input_states_1 = {reactivity=delayed}
                input_states_2 = {reactivity=delayed}
                input_states_3 = {reactivity=delayed}
                input_states_4 = {reactivity=delayed}
                input_states_5 = {reactivity=delayed}
                input_states_6 = {reactivity=delayed}
            },
            outputs = {
                output_states_1 = {dependencies-init=[], dependencies=[]}
                output_states_2 = {dependencies-init=[], dependencies=[]}
                output_states_3 = {dependencies-init=[], dependencies=[]}
                output_states_4 = {dependencies-init=[], dependencies=[]}
                output_k2_1 = {dependencies-init=[], dependencies=[]}
                output_k2_2 = {dependencies-init=[], dependencies=[]}
                output_k3_1 = {dependencies-init=[], dependencies=[]}
                output_k3_2 = {dependencies-init=[], dependencies=[]}
                output_k4_1 = {dependencies-init=[], dependencies=[]}
                output_k4_2 = {dependencies-init=[], dependencies=[]}
            }
        }
        estimator_2 = {
            inputs = {
                input_pm1 = {reactivity=delayed}
                input_pm2 = {reactivity=delayed}
                input_pm3 = {reactivity=delayed}
                input_pm4 = {reactivity=delayed}
                input_pm5 = {reactivity=delayed}
                input_pe1 = {reactivity=delayed}
                input_pe2 = {reactivity=delayed}
                input_pe3 = {reactivity=delayed}
                input_pe4 = {reactivity=delayed}
                input_pe5 = {reactivity=delayed}
                input_states_1 = {reactivity=delayed}
                input_states_2 = {reactivity=delayed}
                input_states_3 = {reactivity=delayed}
                input_states_4 = {reactivity=delayed}
                input_k2_1 = {reactivity=delayed}
                input_k2_2 = {reactivity=delayed}
                input_k3_1 = {reactivity=delayed}
                input_k3_2 = {reactivity=delayed}
                input_k4_1 = {reactivity=delayed}
                input_k4_2 = {reactivity=delayed}
            },
            outputs = {
                output_states_1 = {dependencies-init=[], dependencies=[]}
                output_states_2 = {dependencies-init=[], dependencies=[]}
                output_states_3 = {dependencies-init=[], dependencies=[]}
                output_states_4 = {dependencies-init=[], dependencies=[]}
                output_states_5 = {dependencies-init=[], dependencies=[]}
                output_states_6 = {dependencies-init=[], dependencies=[]}
            }
        }
    }
    connections = [
        # Controller to Powersystems
        controller.output_pm1 -> powersystem1.input_PM
        controller.output_pm2 -> powersystem2.input_PM
        controller.output_pm3 -> powersystem3.input_PM
        controller.output_pm4 -> powersystem4.input_PM
        controller.output_pm5 -> powersystem5.input_PM

        # Powersystem 1 to Other Powersystems
        powersystem1.output_dy1 -> powersystem2.input_u_1
        powersystem1.output_dy1 -> powersystem3.input_u_1
        powersystem1.output_dy1 -> powersystem4.input_u_1
        powersystem1.output_dy1 -> powersystem5.input_u_1

        # Powersystem 2 to Other Powersystems
        powersystem2.output_dy1 -> powersystem1.input_u_2
        powersystem2.output_dy1 -> powersystem3.input_u_2
        powersystem2.output_dy1 -> powersystem4.input_u_2
        powersystem2.output_dy1 -> powersystem5.input_u_2

        # Powersystem 3 to Other Powersystems
        powersystem3.output_dy1 -> powersystem1.input_u_3
        powersystem3.output_dy1 -> powersystem2.input_u_3
        powersystem3.output_dy1 -> powersystem4.input_u_3
        powersystem3.output_dy1 -> powersystem5.input_u_3

        # Powersystem 4 to Other Powersystems
        powersystem4.output_dy1 -> powersystem1.input_u_4
        powersystem4.output_dy1 -> powersystem2.input_u_4
        powersystem4.output_dy1 -> powersystem3.input_u_4
        powersystem4.output_dy1 -> powersystem5.input_u_4

        # Powersystem 5 to Other Powersystems
        powersystem5.output_dy1 -> powersystem1.input_u_5
        powersystem5.output_dy1 -> powersystem2.input_u_5
        powersystem5.output_dy1 -> powersystem3.input_u_5
        powersystem5.output_dy1 -> powersystem4.input_u_5

        # Powersystems to Estimator 1
        powersystem1.output_P_e -> estimator_1.input_pe1
        powersystem2.output_P_e -> estimator_1.input_pe2
        powersystem3.output_P_e -> estimator_1.input_pe3
        powersystem4.output_P_e -> estimator_1.input_pe4
        powersystem5.output_P_e -> estimator_1.input_pe5

        # Controller to Estimator - Mechanical Power
        controller.output_pm1 -> estimator_1.input_pm1
        controller.output_pm2 -> estimator_1.input_pm2
        controller.output_pm3 -> estimator_1.input_pm3
        controller.output_pm4 -> estimator_1.input_pm4
        controller.output_pm5 -> estimator_1.input_pm5

        # Powersystems to Estimator 2
        powersystem1.output_P_e -> estimator_2.input_pe1
        powersystem2.output_P_e -> estimator_2.input_pe2
        powersystem3.output_P_e -> estimator_2.input_pe3
        powersystem4.output_P_e -> estimator_2.input_pe4
        powersystem5.output_P_e -> estimator_2.input_pe5

        # Controller to Estimator - Mechanical Power
        controller.output_pm1 -> estimator_2.input_pm1
        controller.output_pm2 -> estimator_2.input_pm2
        controller.output_pm3 -> estimator_2.input_pm3
        controller.output_pm4 -> estimator_2.input_pm4
        controller.output_pm5 -> estimator_2.input_pm5

        # Estimator 1 to Estimator 2
        estimator_1.output_k2_1 -> estimator_2.input_k2_1
        estimator_1.output_k2_2 -> estimator_2.input_k2_2
        estimator_1.output_k3_1 -> estimator_2.input_k3_1
        estimator_1.output_k3_2 -> estimator_2.input_k3_2
        estimator_1.output_k4_1 -> estimator_2.input_k4_1
        estimator_1.output_k4_2 -> estimator_2.input_k4_2
        estimator_1.output_states_1 -> estimator_2.input_states_1
        estimator_1.output_states_2 -> estimator_2.input_states_2
        estimator_1.output_states_3 -> estimator_2.input_states_3
        estimator_1.output_states_4 -> estimator_2.input_states_4

        # Estimator 1 to Controller
        estimator_1.output_states_1 -> controller.input_estimated_angle_FMU_4
        estimator_1.output_states_2 -> controller.input_estimated_angle_FMU_5
        estimator_1.output_states_3 -> controller.input_estimated_omega_FMU_4
        estimator_1.output_states_4 -> controller.input_estimated_omega_FMU_5

        # Estimator 2 to Estimator 1
        estimator_2.output_states_1 -> estimator_1.input_states_1
        estimator_2.output_states_2 -> estimator_1.input_states_2
        estimator_2.output_states_3 -> estimator_1.input_states_3
        estimator_2.output_states_4 -> estimator_1.input_states_4
        estimator_2.output_states_5 -> estimator_1.input_states_5
        estimator_2.output_states_6 -> estimator_1.input_states_6

        # Estimator 2 to Controller
        estimator_2.output_states_1 -> controller.input_estimated_angle_FMU_1
        estimator_2.output_states_2 -> controller.input_estimated_angle_FMU_2
        estimator_2.output_states_3 -> controller.input_estimated_angle_FMU_3
        estimator_2.output_states_4 -> controller.input_estimated_omega_FMU_1
        estimator_2.output_states_5 -> controller.input_estimated_omega_FMU_2
        estimator_2.output_states_6 -> controller.input_estimated_omega_FMU_3
    ]
}

initialization = []
cosim-step = {}