name = "Master algorithm for MSD with algebraic loop in initialization"
scenario = {
    fmus = {
        msd1 = {
            inputs = {
                fk = {reactivity=delayed}
            },
            outputs = {
                x1 = {dependencies-init=[fk], dependencies=[fk]}
            }
        }
        msd2 = {
            inputs = {
                x1 = {reactivity=delayed}
            },
            outputs = {
                fk = {dependencies-init=[x1], dependencies=[x1]}
            }
        }
    }
    connections = [
        msd1.x1 -> msd2.x1
        msd2.fk -> msd1.fk
    ]
}
initialization = [
    {
        loop: {
            until-converged: [msd1.x1, msd2.fk]
            iterate: [
                {get: msd1.x1}
                {set: msd2.x1}
                {get: msd2.fk}
                {set: msd1.fk}
            ]
        }
   }
]
cosim-step = {
cosim-step1 =
     [
        {
            loop: {
                until-converged: [msd1.x1, msd2.fk]
                iterate: [
                    {get: msd1.x1}
                    {set: msd2.x1}
                    {get: msd2.fk}
                    {set: msd1.fk}
                ]
                if-retry-needed: []
            }
        }
        {step: msd1}
        {step: msd2}
     ]
 }
