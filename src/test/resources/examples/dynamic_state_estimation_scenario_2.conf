name = "Scenario_2"
scenario = {
    fmus = {
        controller = {
            # Have an input parameter input_states, denoting the number of states in the system - 10 for scenario 1 and 8 for scenario 2.
            inputs = {
                input_estimated_angle_FMU_1 = {reactivity=delayed}
                input_estimated_angle_FMU_2 = {reactivity=delayed}
                input_estimated_angle_FMU_3 = {reactivity=delayed}
                input_estimated_angle_FMU_4 = {reactivity=delayed}
                input_estimated_angle_FMU_5 = {reactivity=delayed}
                input_estimated_omega_FMU_1 = {reactivity=delayed}
                input_estimated_omega_FMU_2 = {reactivity=delayed}
                input_estimated_omega_FMU_3 = {reactivity=delayed}
                input_estimated_omega_FMU_4 = {reactivity=delayed}
                input_estimated_omega_FMU_5 = {reactivity=delayed}
            },
            outputs = {
                output_pm1 = {dependencies-init=[], dependencies=[]}
                output_pm2 = {dependencies-init=[], dependencies=[]}
                output_pm3 = {dependencies-init=[], dependencies=[]}
                output_pm4 = {dependencies-init=[], dependencies=[]}
                output_pm5 = {dependencies-init=[], dependencies=[]}
                # The P_e outputs are not connected
                output_p_e_1 = {dependencies-init=[], dependencies=[]}
                output_p_e_2 = {dependencies-init=[], dependencies=[]}
                output_p_e_3 = {dependencies-init=[], dependencies=[]}
                output_p_e_4 = {dependencies-init=[], dependencies=[]}
                output_p_e_5 = {dependencies-init=[], dependencies=[]}
            }
        }
        # Five power systems - the different parameters are denoted by a parameter p_index: which should be set to a value in the interval: 1-5 (powersystem1=1, powersystem2=2, etc.)
        # A powersystem also has a parameter: input_NSG which is the number of powersystem (4 or 5)
        powersystem1 = {
            inputs = {
                input_u_1 = {reactivity=delayed}
                input_u_2 = {reactivity=delayed}
                input_u_3 = {reactivity=delayed}
                input_u_4 = {reactivity=delayed}
                input_PM  = {reactivity=delayed}
            },
            outputs = {
                output_P_e = {dependencies-init=[], dependencies=[]}
                output_dy1 = {dependencies-init=[], dependencies=[]}
                output_dy2 = {dependencies-init=[], dependencies=[]}
            }
        }
        powersystem2 = {
            inputs = {
                input_u_1 = {reactivity=delayed}
                input_u_2 = {reactivity=delayed}
                input_u_3 = {reactivity=delayed}
                input_u_4 = {reactivity=delayed}
                input_PM  = {reactivity=delayed}
            },
            outputs = {
                output_P_e = {dependencies-init=[], dependencies=[]}
                output_dy1 = {dependencies-init=[], dependencies=[]}
                output_dy2 = {dependencies-init=[], dependencies=[]}
            }
        }
        powersystem3 = {
            inputs = {
                input_u_1 = {reactivity=delayed}
                input_u_2 = {reactivity=delayed}
                input_u_3 = {reactivity=delayed}
                input_u_4 = {reactivity=delayed}
                input_PM  = {reactivity=delayed}

            },
            outputs = {
                output_P_e = {dependencies-init=[], dependencies=[]}
                output_dy1 = {dependencies-init=[], dependencies=[]}
                output_dy2 = {dependencies-init=[], dependencies=[]}
            }
        }
        powersystem4 = {
            inputs = {
                input_u_1 = {reactivity=delayed}
                input_u_2 = {reactivity=delayed}
                input_u_3 = {reactivity=delayed}
                input_u_4 = {reactivity=delayed}
                input_PM  = {reactivity=delayed}

            },
            outputs = {
                output_P_e = {dependencies-init=[], dependencies=[]}
                output_dy1 = {dependencies-init=[], dependencies=[]}
                output_dy2 = {dependencies-init=[], dependencies=[]}
            }
        }
        estimator = {
            inputs = {
                input_pm1 = {reactivity=delayed}
                input_pm2 = {reactivity=delayed}
                input_pm3 = {reactivity=delayed}
                input_pm4 = {reactivity=delayed}
                input_pe1 = {reactivity=delayed}
                input_pe2 = {reactivity=delayed}
                input_pe3 = {reactivity=delayed}
                input_pe4 = {reactivity=delayed}
            },
            outputs = {
                output_states_1 = {dependencies-init=[], dependencies=[]}
                output_states_2 = {dependencies-init=[], dependencies=[]}
                output_states_3 = {dependencies-init=[], dependencies=[]}
                output_states_4 = {dependencies-init=[], dependencies=[]}
                output_states_5 = {dependencies-init=[], dependencies=[]}
                output_states_6 = {dependencies-init=[], dependencies=[]}
                output_states_7 = {dependencies-init=[], dependencies=[]}
                output_states_8 = {dependencies-init=[], dependencies=[]}
            }
        }
    }
    connections = [
        # Controller to Powersystems
        controller.output_pm1 -> powersystem1.input_PM
        controller.output_pm2 -> powersystem2.input_PM
        controller.output_pm3 -> powersystem3.input_PM
        controller.output_pm4 -> powersystem4.input_PM

        # Powersystem 1 to Other Powersystems
        powersystem1.output_dy1 -> powersystem2.input_u_1
        powersystem1.output_dy1 -> powersystem3.input_u_1
        powersystem1.output_dy1 -> powersystem4.input_u_1

        # Powersystem 2 to Other Powersystems
        powersystem2.output_dy1 -> powersystem1.input_u_2
        powersystem2.output_dy1 -> powersystem3.input_u_2
        powersystem2.output_dy1 -> powersystem4.input_u_2

        # Powersystem 3 to Other Powersystems
        powersystem3.output_dy1 -> powersystem1.input_u_3
        powersystem3.output_dy1 -> powersystem2.input_u_3
        powersystem3.output_dy1 -> powersystem4.input_u_3

        # Powersystem 4 to Other Powersystems
        powersystem4.output_dy1 -> powersystem1.input_u_4
        powersystem4.output_dy1 -> powersystem2.input_u_4
        powersystem4.output_dy1 -> powersystem3.input_u_4

        # Powersystems to Estimator
        powersystem1.output_P_e -> estimator.input_pe1
        powersystem2.output_P_e -> estimator.input_pe2
        powersystem3.output_P_e -> estimator.input_pe3
        powersystem4.output_P_e -> estimator.input_pe4

        # Controller to the Estimator
        controller.output_pm1 -> estimator.input_pm1
        controller.output_pm2 -> estimator.input_pm2
        controller.output_pm3 -> estimator.input_pm3
        controller.output_pm4 -> estimator.input_pm4

        # Estimator to Controller
       estimator.output_states_1 -> controller.input_estimated_angle_FMU_1
       estimator.output_states_2 -> controller.input_estimated_angle_FMU_2
       estimator.output_states_3 -> controller.input_estimated_angle_FMU_3
       estimator.output_states_4 -> controller.input_estimated_angle_FMU_4
       estimator.output_states_5 -> controller.input_estimated_omega_FMU_1
       estimator.output_states_6 -> controller.input_estimated_omega_FMU_2
       estimator.output_states_7 -> controller.input_estimated_omega_FMU_3
       estimator.output_states_8 -> controller.input_estimated_omega_FMU_4
    ]
}

initialization = [
  {get: "powersystem3.output_P_e"}
  {set: "estimator.input_pe3"}
  {get: "powersystem4.output_P_e"}
  {set: "estimator.input_pe4"}
  {get: "estimator.output_states_1"}
  {set: "controller.input_estimated_angle_FMU_1"}
  {get: "controller.output_pm1"}
  {set: "powersystem1.input_PM"}
  {set: "estimator.input_pm1"}
  {get: "estimator.output_states_4"}
  {set: "controller.input_estimated_angle_FMU_4"}
  {get: "estimator.output_states_2"}
  {set: "controller.input_estimated_angle_FMU_2"}
  {get: "estimator.output_states_6"}
  {get: "estimator.output_states_7"}
  {get: "powersystem1.output_dy1"}
  {set: "powersystem4.input_u_1"}
  {set: "powersystem2.input_u_1"}
  {set: "powersystem3.input_u_1"}
  {get: "powersystem1.output_P_e"}
  {set: "estimator.input_pe1"}
  {get: "controller.output_pm3"}
  {set: "powersystem3.input_PM"}
  {set: "estimator.input_pm3"}
  {get: "estimator.output_states_8"}
  {set: "controller.input_estimated_omega_FMU_2"}
  {get: "powersystem2.output_P_e"}
  {set: "estimator.input_pe2"}
  {get: "controller.output_pm4"}
  {set: "estimator.input_pm4"}
  {set: "powersystem4.input_PM"}
  {get: "powersystem3.output_dy1"}
  {set: "powersystem1.input_u_3"}
  {set: "powersystem2.input_u_3"}
  {set: "powersystem4.input_u_3"}
  {get: "controller.output_pm2"}
  {set: "estimator.input_pm2"}
  {set: "powersystem2.input_PM"}
  {get: "estimator.output_states_5"}
  {set: "controller.input_estimated_omega_FMU_1"}
  {get: "powersystem2.output_dy1"}
  {set: "powersystem3.input_u_2"}
  {set: "powersystem1.input_u_2"}
  {set: "powersystem4.input_u_2"}
  {get: "powersystem4.output_dy1"}
  {set: "powersystem1.input_u_4"}
  {set: "powersystem3.input_u_4"}
  {set: "powersystem2.input_u_4"}
  {get: "estimator.output_states_3"}
  {set: "controller.input_estimated_angle_FMU_3"}
]

cosim-step = {
    conf1 =
    [
        {step: powersystem2 }
        {get: "powersystem2.output_dy1"}
        {step: powersystem1 }
        {set: "powersystem1.input_u_2"}
        {get: "powersystem1.output_dy1"}
        {set: "powersystem2.input_u_1"}
        {get: "powersystem1.output_P_e"}
        {get: "powersystem2.output_P_e"}
        {step: powersystem4 }
        {get: "powersystem4.output_P_e"}
        {set: "powersystem4.input_u_1"}
        {get: "powersystem4.output_dy1"}
        {set: "powersystem1.input_u_4"}
        {set: "powersystem2.input_u_4"}
        {set: "powersystem4.input_u_2"}
        {step: controller }
        {get: "controller.output_pm4"}
        {set: "powersystem4.input_PM"}
        {get: "controller.output_pm2"}
        {set: "powersystem2.input_PM"}
        {get: "controller.output_pm3"}
        {get: "controller.output_pm1"}
        {set: "powersystem1.input_PM"}
        {step: powersystem3 }
        {set: "powersystem3.input_u_2"}
        {set: "powersystem3.input_u_4"}
        {get: "powersystem3.output_P_e"}
        {get: "powersystem3.output_dy1"}
        {set: "powersystem1.input_u_3"}
        {set: "powersystem2.input_u_3"}
        {set: "powersystem4.input_u_3"}
        {set: "powersystem3.input_PM"}
        {set: "powersystem3.input_u_1"}
        {step: estimator }
        {get: "estimator.output_states_6"}
        {get: "estimator.output_states_8"}
        {set: "controller.input_estimated_omega_FMU_2"}
        {set: "estimator.input_pm2"}
        {set: "estimator.input_pe3"}
        {get: "estimator.output_states_4"}
        {set: "controller.input_estimated_angle_FMU_4"}
        {set: "estimator.input_pe1"}
        {set: "estimator.input_pe4"}
        {get: "estimator.output_states_5"}
        {get: "estimator.output_states_3"}
        {set: "controller.input_estimated_angle_FMU_3"}
        {set: "estimator.input_pm4"}
        {get: "estimator.output_states_2"}
        {set: "controller.input_estimated_angle_FMU_2"}
        {get: "estimator.output_states_7"}
        {set: "controller.input_estimated_omega_FMU_1"}
        {set: "estimator.input_pm1"}
        {get: "estimator.output_states_1"}
        {set: "controller.input_estimated_angle_FMU_1"}
        {set: "estimator.input_pe2"}
        {set: "estimator.input_pm3"}
    ]
}