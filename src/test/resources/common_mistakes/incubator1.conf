name = Master algorithm for the Incubator example.
scenario = {
  fmus = {
    Controller_CInstance = {
      inputs = {
        LL_in = {reactivity=delayed}
        UL_in = {reactivity=delayed}
        T_bair_in = {reactivity=delayed}
        H_in = {reactivity=delayed}
        C_in = {reactivity=delayed}
      },
      outputs = {
        heater_on_out = {dependencies-init=[], dependencies=[]}
      }
    }
    KalmanFilter_KInstance = { 
      inputs = {
        T_room_in = {reactivity=reactive}
        T_bair_in = {reactivity=reactive}
        heater_on_in = {reactivity=reactive}
      },
      outputs = {
        T_bair_out = {dependencies-init=[T_bair_in], dependencies=[]}
        T_heater_out = {dependencies-init=[], dependencies=[]}
      }
    }
    Supervisor_SInstance = { 
      inputs = {
        T_room_in = {reactivity=reactive}
        T_heater_in = {reactivity=reactive}
        T_bair_in = {reactivity=reactive}
        heater_on_in = {reactivity=reactive}
      },
      outputs = {
        H_out = {dependencies-init=[], dependencies=[]}
        UL_out = {dependencies-init=[], dependencies=[]}
        LL_out = {dependencies-init=[], dependencies=[]}
        C_out = {dependencies-init=[], dependencies=[]}
      }
    }
    Plant_PInstance = { 
      inputs = {
        heater_on_in = {reactivity=delayed}
        T_room_in = {reactivity=delayed}
      },
      outputs = {
        T_bair_out = {dependencies-init=[], dependencies=[]}
      }
    }
    Room_RInstance = { 
      inputs = {},
      outputs = {
        T_room_out = {dependencies-init=[], dependencies=[]}
      }
    }
  }
  connections = [
    Controller_CInstance.heater_on_out -> Plant_PInstance.heater_on_in
    Controller_CInstance.heater_on_out -> KalmanFilter_KInstance.heater_on_in
    Supervisor_SInstance.LL_out -> Controller_CInstance.LL_in
    Supervisor_SInstance.UL_out -> Controller_CInstance.UL_in
    Supervisor_SInstance.H_out -> Controller_CInstance.H_in
    Supervisor_SInstance.C_out -> Controller_CInstance.C_in
    Plant_PInstance.T_bair_out -> Controller_CInstance.T_bair_in
    Plant_PInstance.T_bair_out -> KalmanFilter_KInstance.T_bair_in
    Room_RInstance.T_room_out -> Plant_PInstance.T_room_in
    Room_RInstance.T_room_out -> KalmanFilter_KInstance.T_room_in
    Room_RInstance.T_room_out -> Supervisor_SInstance.T_room_in
    KalmanFilter_KInstance.T_heater_out -> Supervisor_SInstance.T_heater_in
    KalmanFilter_KInstance.T_bair_out -> Supervisor_SInstance.T_bair_in
    Controller_CInstance.heater_on_out -> Supervisor_SInstance.heater_on_in
  ]
}
initialization = [
  {get: Supervisor_SInstance.H_out}
  {set: Controller_CInstance.H_in}
  {get: Supervisor_SInstance.LL_out}
  {set: Controller_CInstance.LL_in}
  {get: Supervisor_SInstance.UL_out}
  {set: Controller_CInstance.UL_in}
  {get: Controller_CInstance.heater_on_out}
  {set: Supervisor_SInstance.heater_on_in}
  {set: KalmanFilter_KInstance.heater_on_in}
  {set: Plant_PInstance.heater_on_in}
  {get: Supervisor_SInstance.C_out}
  {set: Controller_CInstance.C_in}
  {get: Plant_PInstance.T_bair_out}
  {set: Controller_CInstance.T_bair_in}

  # Mistake is here: the following two instructions are flipped
  {get: KalmanFilter_KInstance.T_bair_out}
  {set: KalmanFilter_KInstance.T_bair_in}
  
  {set: Supervisor_SInstance.T_bair_in}
  {get: KalmanFilter_KInstance.T_heater_out}
  {set: Supervisor_SInstance.T_heater_in}
  {get: Room_RInstance.T_room_out}
  {set: Plant_PInstance.T_room_in}
  {set: KalmanFilter_KInstance.T_room_in}
  {set: Supervisor_SInstance.T_room_in}
]
cosim-step = {
    cosim1 = [
      {step: Room_RInstance }
      {step: Plant_PInstance }
      {get: Room_RInstance.T_room_out}
      {set: Plant_PInstance.T_room_in}
      {set: KalmanFilter_KInstance.T_room_in}
      {set: Supervisor_SInstance.T_room_in}
      {step: Controller_CInstance }
      {get: Controller_CInstance.heater_on_out}
      {set: Supervisor_SInstance.heater_on_in}
      {set: KalmanFilter_KInstance.heater_on_in}
      {set: Plant_PInstance.heater_on_in}
      {get: Plant_PInstance.T_bair_out}
      {set: Controller_CInstance.T_bair_in}
      {set: KalmanFilter_KInstance.T_bair_in}
      {step: KalmanFilter_KInstance }
      {get: KalmanFilter_KInstance.T_heater_out}
      {set: Supervisor_SInstance.T_heater_in}
      {get: KalmanFilter_KInstance.T_bair_out}
      {set: Supervisor_SInstance.T_bair_in}
      {step: Supervisor_SInstance }
      {get: Supervisor_SInstance.UL_out}
      {set: Controller_CInstance.UL_in}
      {get: Supervisor_SInstance.LL_out}
      {set: Controller_CInstance.LL_in}
      {get: Supervisor_SInstance.H_out}
      {set: Controller_CInstance.H_in}
      {get: Supervisor_SInstance.C_out}
      {set: Controller_CInstance.C_in}
    ]
}
